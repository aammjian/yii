<?php
namespace console\controllers\search;

use console\controllers\utils\Elasticsearch\Client;
use console\controllers\utils\Elasticsearch\ES;
use yii\console\Controller;
use Yii;

class ElController extends Controller
{

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        echo 'info          搜索引擎信息' . PHP_EOL;
        echo 'list          搜索引擎index列表' . PHP_EOL;
        echo 'create        创建index' . PHP_EOL;
        echo 'mapping       创建mapping' . PHP_EOL;
        echo 'getMapping    读取mapping' . PHP_EOL;
        echo 'del           删除整个索引' . PHP_EOL;
    }

    /**
     * 搜索引擎信息
     */
    public function actionInfo()
    {
        $client = Client::getInstance();
        dump($client->info());
    }

    /**
     * 搜索引擎index列表
     */
    public function actionList()
    {
        $client = Client::getInstance();
        try {
            $cat = $client->cat();
            $res = $cat->indices();

//            dump($res);
            $indices = $client->indices();
            $res = $indices->getMapping([
                'index' => ES::ES_INDEX,
            ]);

            dump($res);
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * 创建index
     */
    public function actionCreate()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => ES::ES_INDEX,
        ];
        try {
            $res = $indices->create($params);
            if ($res['acknowledged']) {
                dump('Index 创建成功');
            }
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
             dump($res);
        }
    }

    /**
     * 创建mapping
     */
    public function actionMapping()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => ES::ES_INDEX,
            'type' => ES::ES_TYPE_USER,
            'body' => [
                'properties' => [
                    'name' => ['type' => 'string'],
                    'book.author' => ['type' => 'string'],
                    'book.name' => ['type' => 'string'],
                    'book.publish' => ['type' => 'date'],
                    'book.desc' => ['type' => 'string'],
                    'age' => ['type' => 'short'],
                    'birthday' => ['type' => 'date'],
                    'location' => ['type' => 'geo_point'],
                    'randnum' => ['type' => 'long'],
                ],
            ],
        ];
        try {
            $res = $indices->putMapping($params);
            if ($res['acknowledged']) {
                dump('Mapping 设置成功');
            }
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * 读取mapping
     */
    public function actionGetMapping()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => ES::ES_INDEX,
            'type' => ES::ES_TYPE_USER,
        ];
        try {
            $res = $indices->getMapping($params);
            dump($res);
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * 删除整个索引
     */
    public function actionDel()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => ES::ES_INDEX,
        ];
        try {
            $res = $indices->delete($params);
            if ($res['acknowledged']) {
                dump('删除索引成功');
            }
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

}