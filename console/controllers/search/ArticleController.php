<?php
namespace console\controllers\search;

use console\controllers\utils\Elasticsearch\Client;
use console\controllers\utils\Elasticsearch\ES;
use yii\console\Controller;
use Yii;

class ArticleController extends Controller
{
    private $index = 'article';

    private $type = 'user';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        echo 'create        创建index' . PHP_EOL;
        echo 'mapping       创建mapping' . PHP_EOL;
        echo 'getMapping    读取mapping' . PHP_EOL;
        echo 'del           删除整个索引' . PHP_EOL;
    }

    /**
     * 创建index
     */
    public function actionCreate()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => $this->index,
        ];
        try {
            $res = $indices->create($params);
            if ($res['acknowledged']) {
                dump('Index 创建成功');
            }
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * mapping
     */
    public function actionMapping()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => $this->index,
            'type' => $this->type,
            'body' => [
                'properties' => [
                    'articleID' => ['type' => 'string'],
                    'userId' => ['type' => 'integer'],
                    'hidden' => ['type' => 'boolean'],
                    'postDate' => ['type' => 'date']
                ],
            ],
        ];
        try {
            $res = $indices->putMapping($params);
            if ($res['acknowledged']) {
                dump('Mapping 设置成功');
            }
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * 读取mapping
     */
    public function actionGetMapping()
    {
        $client = Client::getInstance();
        $indices = $client->indices();

        $params = [
            'index' => $this->index,
            'type' => $this->type,
        ];
        try {
            $res = $indices->getMapping($params);
            dump($res);
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }
}