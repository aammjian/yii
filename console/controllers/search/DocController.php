<?php
namespace console\controllers\search;

use console\controllers\utils\Elasticsearch\Client;
use console\controllers\utils\Elasticsearch\ES;
use console\controllers\utils\Elasticsearch\EsLogic;
use yii\console\Controller;
use Yii;

class DocController extends Controller
{

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        echo 'ElasticSearch测试' . PHP_EOL;
        echo 'bool          BOOL查询' . PHP_EOL;
        echo 'add           插入文档' . PHP_EOL;
        echo 'get           读取' . PHP_EOL;
        echo 'search        搜索' . PHP_EOL;
    }

    /**
     * BOOL查询
     */
    public function actionBool()
    {
        $client = Client::getInstance();
        $lat = EsLogic::getRandomLat();
        $lon = EsLogic::getRandomLon();

        $params = [
            'index' => ES::ES_INDEX,
            'type' => ES::ES_TYPE_USER,
            'body' => [
                'query' => [
                    'bool' => [
                        'must' => [
                            ['match' => ['name' => '小王']],
                            ['term' => ['book.author' => 'xiaolin']],
                        ],
                        'filter' => [
                            [
                                'geo_distance' => [
                                    'distance' => '1km',
                                    'location' => [
                                        'lat' => $lat,
                                        'lon' => $lon,
                                    ],
                                ],
                            ],
                        ],
                    ],

                ],
                'from' => 0,
                'size' => 5,
                'sort' => [
                    [
                        '_geo_distance' => [
                            'location' => [
                                'lat' => $lat,
                                'lon' => $lon,
                            ],
                            'order' => 'asc',
                            'unit' => 'km',
                            'mode' => 'min',
                        ],
                    ],
                    [
                        'randnum' => 'desc',
                    ],
                ],
            ],
        ];
        try {
            $res = $client->search($params);
            dump($res);
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

    /**
     * 添加
     * @param $num
     */
    public function actionAdd($num)
    {
        $length = $num ?? 10;
        $client = Client::getInstance();
        for ($i = 0; $i < $length; $i++) {
            $params = [
                'index' => ES::ES_INDEX,
                'type' => ES::ES_TYPE_USER,
                'id' => $i,
                'body' => [
                    'name' => EsLogic::getRandomName(),
                    'age' => rand(1, 99),
                    'birthday' => EsLogic::getRandomDate(),
                    'book' => [
                        'author' => EsLogic::getRandomName(),
                        'name' => EsLogic::getRandomBook(),
                        'publish' => EsLogic::getRandomDate(),
                        'desc' => EsLogic::getRandomBook() . ' 不在话下。',
                    ],
                    'location' => [
                        'lat' => EsLogic::getRandomLat(),
                        'lon' => EsLogic::getRandomLon(),
                    ],
                    'randnum' => rand(1, 999999),
                ],
            ];
            try {
                $res = $client->index($params);
                dump($res);
                if ($res['created']) {
                    echo '用户DOC创建成功' . PHP_EOL;
                } else {
                    echo '用户DOC创建失败（可能已存在））' . PHP_EOL;
                }
            } catch (\Exception $ex) {
                dump($ex->getMessage());
            }
        }

    }

    /**
     * 读取
     */
    public function actionGet()
    {
        $client = Client::getInstance();
        $params = [
            'index' => ES::ES_INDEX,
            'type' => ES::ES_TYPE_USER,
            'id' => 1,
        ];
        $res = $client->get($params);
        dump($res);
    }

    /**
     * 搜索
     */
    public function actionSearch()
    {
        $client = Client::getInstance();
        $lat = 31.249162;
        $lon = 121.487899;
        $params = [
            'index' => ES::ES_INDEX,
            'type' => ES::ES_TYPE_USER,
            'body' => [
                'query' => [
//                    'match' => [
//                        'name' => [
//                            'query' => '林',
//                        ],
//                    ],
//                    'match_all' => [
//                        'boost' => 1.0,
//                    ],
//                     'term' => [
//                         'name' => 'lin'
//                     ],
                ],
            ],
        ];
        try {
            $res = $client->search($params);
            dump($res);
        } catch (\Exception $ex) {
            $res = json_decode($ex->getMessage(), true);
            dump($res);
        }
    }

}