<?php
namespace console\controllers\Cs\test;

use yii\console\Controller;
use yii\helpers\ArrayHelper;
use Yii;

class NumberController extends Controller
{
    /**
     * 初始化
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        echo 'Help:' . PHP_EOL;
        echo '函数测试' . PHP_EOL;

        echo 'Usage:' . PHP_EOL;
        echo './yii Cs/test/number [action]' . PHP_EOL;

        echo 'Actions:' . PHP_EOL;

        echo 'format            number_format测试' . PHP_EOL;
        echo 'decbin            decbin 10进制到2进制 测试' . PHP_EOL;
        echo 'bc                高精度运算' . PHP_EOL;
    }

    public function actionBc()
    {
        $a = 0.1;
        $b = 0.7;
        $scale = 2; // 精确到小数点位数
        dump('普通加法：');
        dump($a + $b == 0.8);
        dump('高精度加法：');
        dump(bcadd($a, $b, $scale) == 0.8);
    }

    public function actionDecbin()
    {
        $time = time() - strtotime('2017-01-01');
        // $time = strtotime('2018-01-01') - strtotime('2017-01-01');

        // 64bit
        $bit = decbin($time);
        $bit = str_pad($bit, 42, '0', STR_PAD_LEFT);
        $int = str_pad($bit, 64, '0');
        dd(bindec($int));
    }

    public function actionFormat()
    {
        dump('保留2位小数:');
        dump('执行：number_format(\'1.222222\', 2)');
        dump(number_format('1.222222', 2));
        dump('执行：number_format(99.222222, 2)');
        dump(number_format(99.222222, 2));
    }
}